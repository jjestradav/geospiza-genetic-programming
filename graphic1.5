#lang racket
(require framework)
(require plot)

(define xz '(6 6 19 18 6 7 2 7))
(define yz '(10 9 9 19 5 18 4 16))
(define zz '(-64 -45 280 -37 11 -275 -12 -207))
(define arboll  '(+ (- y (+ y (+ (log x 47) y))) 100))
;(plot3d (list (surface3d (lambda (x y) (+ (- y (+ y (+ (log x 47) y))) 100)) (- 100) 100 (- 100) 100)
            ; (points3d (map vector xz yz zz) #:color 3 #:sym 'fullcircle5)))



;Dominio: arboles binarios de expresion
;COdominio: prepara la expresion para graficar
(define prepara
  (lambda (arbol)
    (list (cons 'lambda (cons '(x y) (list arbol))))))



(define graficar
  (lambda (arbol xs ys zs)
    (define exp (car (prepara arbol)))
    (plot3d (list (surface3d  (eval exp)  (- 100) 100 (- 100) 100)
                  (points3d (map vector xs ys zs) #:color 3 #:sym 'fullcircle5)))))




